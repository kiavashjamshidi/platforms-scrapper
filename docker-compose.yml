version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: streaming_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-streamdata}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-streamdata_password}
      POSTGRES_DB: ${POSTGRES_DB:-streaming_platform}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-streamdata}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    container_name: streaming_api
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://streamdata:streamdata_password@db:5432/streaming_platform}
      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
      - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET}
      - KICK_CLIENT_ID=${KICK_CLIENT_ID}
      - KICK_CLIENT_SECRET=${KICK_CLIENT_SECRET}
      - API_HOST=${API_HOST:-0.0.0.0}
      - API_PORT=${API_PORT:-8000}
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  collector:
    build: .
    container_name: streaming_collector
    command: python -m app.collector.scheduler
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://streamdata:streamdata_password@db:5432/streaming_platform}
      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
      - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET}
      - KICK_CLIENT_ID=${KICK_CLIENT_ID}
      - KICK_CLIENT_SECRET=${KICK_CLIENT_SECRET}
      - COLLECTION_INTERVAL_MINUTES=${COLLECTION_INTERVAL_MINUTES:-5}
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
